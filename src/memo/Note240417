스프링/스프링부트의 주요 concept
→ 아주 중요한 컨셉(제일 중점줬던 철학)
→ 각 개념이 독립적인건 아님

1. Bean(재료)
2. IoC(= Inversion of Control) 제어의 역전
   → 제어의 역전의 주체 : Application Context(= Spring Container)
   → IoC의 역할을 하게 해주는 방법이 DI
3. DI(= Dependecy Injection) 의존성주입 / 외우기
   → 그렇기에 다른 클래스 안에 @autowired라는 어노테이션 넣은 것이 나오는것?
   → 여기에서 다른 클래스는 받는쪽, 어노테이션으로 변수 정의하는 클래스의 주체가 주는쪽
   → 생성과 소멸(=control)의 관점에서 볼때, 받는쪽은 컨트롤을 못하고 주는쪽인 외부
     클래스(Application Context(= Spring Container))가 생성과 소멸의 관리함
   Application Context(= Spring Container)
4. AOP(= Aspect Oriented Programming) 관점지향프로그래밍
5. PSA(= Portable Service Abstraction) 이식가능한 서비스 추상화
