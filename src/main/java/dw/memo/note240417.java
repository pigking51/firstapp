package dw.memo;

public class note240417 {
    
    // 스프링/스프링부트는 다른것임
    // → 스프링은 추가적으로 만들때 일일히 입력해야된다고 하는데
    //    부트는 그런거 없이 추가만 하면 되서 편하다고 함
    // 설치하고나서 해당 main-java-dw-first 패키지 아래에 5개의 패키지 추가
    // → controller, service, model, repository, exception(이것들 이름은 바꾸지 말 것!!!)
    // 여기에 추가로 utility패키지 추가해서 위의 5개에 포함되지 않으면 utility에 넣는다고 함
    // .class : 해당 이름을 spring에 알려주는것?
    // 각 패키지에 들어가는 파일들은 ~패키지명 ← 이런방식으로 쓰는데
    // model만 엔티티 쓰듯이 사용해서 방식이 다르다고 함
    // 어노테이션을 잘쓰면 spring을 잘한다고 함
    
    // JSON : 서로 다른 적용된 기술끼리의 객체를 적용받으려면 JSON파일을 통해 해야됨
    // → 시험에 무조건 내신다고 함(이거 개념설명 제대로 못들었으니 한번 확인해 볼것)
    
    // service 패키지에 코드넣는것 기준은 매우 기능적인거 중심 혹은 반복적인것들이라고 함


    
    // 스프링/스프링부트의 주요 concept
    //→ 아주 중요한 컨셉(제일 중점줬던 철학)
    //→ 각 개념이 독립적인건 아님
    //
    //1. Bean(재료)
    //   → 어플리케이션 컨텍스트를 통해 생성 관리 조립되는 객체를 말함
    //2. IoC(= Inversion of Control) 제어의 역전
    //   → 제어의 역전의 주체 : Application Context(= Spring Container)
    //   → IoC의 역할을 하게 해주는 방법이 DI
    //   → 특정 클래스에서 외부에 있는 클래스를 명시하여 사용할 경우
    //     그 제어를 의존성 주입당한 클래스가 아닌 어플리케이션 컨텍스트가 제어하는 것을 말함
    //3. DI(= Dependecy Injection) 의존성주입 / 외우기
    //   → 그렇기에 다른 클래스 안에 @autowired라는 어노테이션 넣은 것이 나오는것?
    //   → 여기에서 다른 클래스는 받는쪽, 어노테이션으로 변수 정의하는 클래스의 주체가 주는쪽
    //   → 생성과 소멸(=control)의 관점에서 볼때, 받는쪽은 컨트롤을 못하고 주는쪽인 외부
    //     클래스(Application Context(= Spring Container))가 생성과 소멸의 관리함
    //   Application Context(= Spring Container)
    //4. AOP(= Aspect Oriented Programming) 관점지향프로그래밍
    //   → 일을 핵심관점과 부가관점으로 나눠서 해야된다는 것
    //    핵심관점 : 중요한부분(이 부분을 개발자가 주로 하고)
    //    부가관점 : 나머지 공통적인 부분을 Spring으로 함
    //   → 시니어개발자는 이런 구분을 잘한다고 함
    // ※ ↑ 위의 3개의 개념은 꼭 외우기(아래꺼 까지 외우면 best)
    //5. PSA(= Portable Service Abstraction) 이식가능한 서비스 추상화
    //   → 모듈화(가장 잘 되어있는 예시 : 데스크탑)
    //   → Spring에서 말하는 Service는 일 또는 로직을 말함
    //   → JPA : 잘 모르는사람들은 SQL없이 가능하게 만들어주는거라고 한다는데
    //           절대로 이렇게 말하지 말 것!!!(틀린말은 아니지만 수준떨어지는 대답이라고 함)
    //   → 사용 시 데이터베이스에 대한 의존성이 떨어지게 해서 개발자가 순수하게 DB만 집중할 수 있게 해주는 기능
    //   → (개념 애매하게 적은거니 확실히 알아둘 것)

    // 김영한 → 국내에서 spring관련 권위자(이분 책, 강의 있음)
    // → 무료강의만 들어봐도 ㄱㅊ을거같다고 함

}
